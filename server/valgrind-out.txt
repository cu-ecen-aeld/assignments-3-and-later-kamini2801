==5152== Memcheck, a memory error detector
==5152== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5152== Using Valgrind-3.14.0-353a3587bb-20181007X and LibVEX; rerun with -h for copyright info
==5152== Command: ./aesdsocket
==5152== Parent PID: 1795
==5152== 
--5152-- 
--5152-- Valgrind options:
--5152--    --tool=memcheck
--5152--    --leak-check=full
--5152--    --show-leak-kinds=all
--5152--    --track-origins=yes
--5152--    --verbose
--5152--    --log-file=valgrind-out.txt
--5152-- Contents of /proc/version:
--5152--   Linux version 4.19.0-18-amd64 (debian-kernel@lists.debian.org) (gcc version 8.3.0 (Debian 8.3.0-6)) #1 SMP Debian 4.19.208-1 (2021-09-29)
--5152-- 
--5152-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3
--5152-- Page sizes: currently 4096, max supported 4096
--5152-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--5152-- Reading syms from /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket
--5152-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.28.so
--5152--   Considering /usr/lib/debug/.build-id/f2/5dfd7b95be4ba386fd71080accae8c0732b711.debug ..
--5152--   .. build-id is valid
--5152-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--5152--   Considering /usr/lib/debug/.build-id/32/2e77af97f403c3d34ff09edf60b089e72ec889.debug ..
--5152--   .. build-id is valid
--5152--    object doesn't have a dynamic symbol table
--5152-- Scheduler: using generic scheduler lock implementation.
--5152-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==5152== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-5152-by-kamini-on-???
==5152== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-5152-by-kamini-on-???
==5152== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-5152-by-kamini-on-???
==5152== 
==5152== TO CONTROL THIS PROCESS USING vgdb (which you probably
==5152== don't want to do, unless you know exactly what you're doing,
==5152== or are doing some strange experiment):
==5152==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=5152 ...command...
==5152== 
==5152== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==5152==   /path/to/gdb ./aesdsocket
==5152== and then give GDB the following command
==5152==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=5152
==5152== --pid is optional if only one valgrind process is running
==5152== 
--5152-- REDIR: 0x401e2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--5152-- REDIR: 0x401e0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (vgPlain_amd64_linux_REDIR_FOR_index)
--5152-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--5152--   Considering /usr/lib/debug/.build-id/34/fbc4cdfbfce1bfc3d2e522a01a050bf724c930.debug ..
--5152--   .. build-id is valid
--5152-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--5152--   Considering /usr/lib/debug/.build-id/ca/bb7898ea982d936cbfadd70ae831c6eb63623f.debug ..
--5152--   .. build-id is valid
==5152== WARNING: new redirection conflicts with existing -- ignoring it
--5152--     old: 0x0401e2f0 (strlen              ) R-> (0000.0) 0x580c9ce2 vgPlain_amd64_linux_REDIR_FOR_strlen
--5152--     new: 0x0401e2f0 (strlen              ) R-> (2007.0) 0x04838d80 strlen
--5152-- REDIR: 0x401ab10 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4839e40 (strcmp)
--5152-- REDIR: 0x401e830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x483d860 (mempcpy)
--5152-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.28.so
--5152--   Considering /usr/lib/debug/.build-id/18/b9a9a8c523e5cfe5b5d946d605d09242f09798.debug ..
--5152--   .. build-id is valid
--5152-- REDIR: 0x48e4f70 (libc.so.6:memmove) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4160 (libc.so.6:strncpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e5250 (libc.so.6:strcasecmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e3b70 (libc.so.6:strcat) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4190 (libc.so.6:rindex) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e6890 (libc.so.6:rawmemchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48ff230 (libc.so.6:wmemchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48fecd0 (libc.so.6:wcscmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e50e0 (libc.so.6:mempcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4f10 (libc.so.6:bcmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4100 (libc.so.6:strncmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e3be0 (libc.so.6:strcmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e5040 (libc.so.6:memset) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48feca0 (libc.so.6:wcschr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e40a0 (libc.so.6:strnlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e3c70 (libc.so.6:strcspn) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e52a0 (libc.so.6:strncasecmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e3c40 (libc.so.6:strcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e53e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x49004d0 (libc.so.6:wcsnlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e41c0 (libc.so.6:strpbrk) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e3ba0 (libc.so.6:index) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4070 (libc.so.6:strlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48eb280 (libc.so.6:memrchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e52f0 (libc.so.6:strcasecmp_l) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4ee0 (libc.so.6:memchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48fedb0 (libc.so.6:wcslen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e4460 (libc.so.6:strspn) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e5220 (libc.so.6:stpncpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e51f0 (libc.so.6:stpcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e68c0 (libc.so.6:strchrnul) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48e5340 (libc.so.6:strncasecmp_l) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48f3ef0 (libc.so.6:__strrchr_sse2) redirected to 0x48387d0 (__strrchr_sse2)
--5152-- REDIR: 0x48f41e0 (libc.so.6:__strlen_sse2) redirected to 0x4838cc0 (__strlen_sse2)
--5152-- REDIR: 0x48e0350 (libc.so.6:malloc) redirected to 0x4835710 (malloc)
--5152-- REDIR: 0x48fe430 (libc.so.6:__memset_sse2_unaligned) redirected to 0x483c790 (memset)
--5152-- REDIR: 0x48e09a0 (libc.so.6:free) redirected to 0x4836940 (free)
--5152-- REDIR: 0x48e4980 (libc.so.6:__GI_strstr) redirected to 0x483dac0 (__strstr_sse2)
--5152-- REDIR: 0x48ee530 (libc.so.6:__memchr_sse2) redirected to 0x4839ee0 (memchr)
--5152-- REDIR: 0x48fe020 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4839fa0 (memcpy@GLIBC_2.2.5)
--5152-- REDIR: 0x48f3ac0 (libc.so.6:__strchr_sse2) redirected to 0x48388b0 (__strchr_sse2)
--5152-- REDIR: 0x48e0bf0 (libc.so.6:realloc) redirected to 0x4837d00 (realloc)
--5152-- REDIR: 0x49ba500 (libc.so.6:__memcmp_sse4_1) redirected to 0x483bfd0 (__memcmp_sse4_1)
--5152-- REDIR: 0x48f3ce0 (libc.so.6:__strchrnul_sse2) redirected to 0x483d390 (strchrnul)
--5152-- REDIR: 0x48fe000 (libc.so.6:__mempcpy_sse2_unaligned) redirected to 0x483d4a0 (mempcpy)
--5152-- REDIR: 0x48e40d0 (libc.so.6:strncat) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
--5152-- REDIR: 0x48fc9e0 (libc.so.6:__strncat_sse2_unaligned) redirected to 0x4838b00 (strncat)
==5152== Invalid write of size 1
==5152==    at 0x4838B4F: strncat (vg_replace_strmem.c:350)
==5152==    by 0x10961C: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Address 0x4a22188 is 0 bytes after a block of size 8 alloc'd
==5152==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==5152==    by 0x109560: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152== 
==5152== Invalid write of size 8
==5152==    at 0x483C814: memset (vg_replace_strmem.c:1251)
==5152==    by 0x1095F8: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Address 0x4a22f00 is 0 bytes after a block of size 2,048 alloc'd
==5152==    at 0x4837D7B: realloc (vg_replace_malloc.c:826)
==5152==    by 0x1095B5: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152== 
==5152== Invalid write of size 8
==5152==    at 0x483C817: memset (vg_replace_strmem.c:1251)
==5152==    by 0x1095F8: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Address 0x4a22f08 is 8 bytes after a block of size 2,048 alloc'd
==5152==    at 0x4837D7B: realloc (vg_replace_malloc.c:826)
==5152==    by 0x1095B5: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152== 
==5152== Invalid write of size 8
==5152==    at 0x483C81B: memset (vg_replace_strmem.c:1251)
==5152==    by 0x1095F8: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Address 0x4a22f10 is 16 bytes after a block of size 2,048 alloc'd
==5152==    at 0x4837D7B: realloc (vg_replace_malloc.c:826)
==5152==    by 0x1095B5: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152== 
==5152== Invalid write of size 8
==5152==    at 0x483C81F: memset (vg_replace_strmem.c:1251)
==5152==    by 0x1095F8: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Address 0x4a22f18 is 24 bytes after a block of size 2,048 in arena "client"
==5152== 
==5152== Conditional jump or move depends on uninitialised value(s)
==5152==    at 0x4838B37: strncat (vg_replace_strmem.c:350)
==5152==    by 0x10961C: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152==  Uninitialised value was created by a stack allocation
==5152==    at 0x109299: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
==5152== 

valgrind: m_mallocfree.c:280 (mk_plain_bszB): Assertion 'bszB != 0' failed.
valgrind: This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==5152==    at 0x580480A4: show_sched_status_wrk (m_libcassert.c:369)
==5152==    by 0x580481B7: report_and_quit (m_libcassert.c:440)
==5152==    by 0x58048349: vgPlain_assert_fail (m_libcassert.c:506)
==5152==    by 0x58052924: mk_plain_bszB (m_mallocfree.c:280)
==5152==    by 0x58052924: mk_plain_bszB (m_mallocfree.c:278)
==5152==    by 0x58052924: get_bszB_as_is (m_mallocfree.c:303)
==5152==    by 0x58052924: get_bszB (m_mallocfree.c:315)
==5152==    by 0x58052924: get_next_b (m_mallocfree.c:434)
==5152==    by 0x58052924: vgPlain_arena_malloc (m_mallocfree.c:1796)
==5152==    by 0x580064B0: vgMemCheck_realloc (mc_malloc_wrappers.c:567)
==5152==    by 0x580A73EF: do_client_request (scheduler.c:1933)
==5152==    by 0x580A73EF: vgPlain_scheduler (scheduler.c:1488)
==5152==    by 0x580F5D80: thread_wrapper (syswrap-linux.c:103)
==5152==    by 0x580F5D80: run_a_thread_NORETURN (syswrap-linux.c:156)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 5152)
==5152==    at 0x4837D7B: realloc (vg_replace_malloc.c:826)
==5152==    by 0x1095B5: main (in /home/kamini/AESD/assignments-3-and-later-kamini2801/server/aesdsocket)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFFBF0
valgrind stack range: [0x1008CAA000 0x1008DA9FFF] top usage: 18344 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

